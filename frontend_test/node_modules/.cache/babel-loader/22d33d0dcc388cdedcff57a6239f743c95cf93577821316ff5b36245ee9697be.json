{"ast":null,"code":"var _jsxFileName = \"/app/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport VideoList from './components/VideoList';\nimport VideoPlayer from './components/VideoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  useEffect(() => {\n    // Fetch the list of videos from the backend\n    fetch('/api/videos').then(response => response.json()).then(data => setVideos(data)).catch(err => console.error(\"Failed to fetch videos:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(VideoList, {\n      videos: videos,\n      onSelectVideo: setSelectedVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n      video: selectedVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"pgreQswQcvHuEDpit6fh/6bGaAw=\");\n_c = App;\nReactDOM.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","VideoList","VideoPlayer","jsxDEV","_jsxDEV","App","_s","videos","setVideos","selectedVideo","setSelectedVideo","fetch","then","response","json","data","catch","err","console","error","children","onSelectVideo","fileName","_jsxFileName","lineNumber","columnNumber","video","_c","render","document","getElementById","$RefreshReg$"],"sources":["/app/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport VideoList from './components/VideoList';\nimport VideoPlayer from './components/VideoPlayer';\n\nconst App = () => {\n    const [videos, setVideos] = useState([]);\n    const [selectedVideo, setSelectedVideo] = useState(null);\n\n    useEffect(() => {\n        // Fetch the list of videos from the backend\n        fetch('/api/videos')\n            .then(response => response.json())\n            .then(data => setVideos(data))\n            .catch(err => console.error(\"Failed to fetch videos:\", err));\n    }, []);\n\n    return (\n        <div>\n            <VideoList videos={videos} onSelectVideo={setSelectedVideo} />\n            <VideoPlayer video={selectedVideo} />\n        </div>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZ;IACAY,KAAK,CAAC,aAAa,CAAC,CACfC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,SAAS,CAACO,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA;IAAAgB,QAAA,gBACIhB,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA,MAAO;MAACc,aAAa,EAAEX;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DrB,OAAA,CAACF,WAAW;MAACwB,KAAK,EAAEjB;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEd,CAAC;AAACnB,EAAA,CAlBID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoBTL,QAAQ,CAAC4B,MAAM,cAACxB,OAAA,CAACC,GAAG;EAAAiB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEI,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}